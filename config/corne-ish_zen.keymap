/*
*
* Copyright (c) 2021 Darryl deHaan
* SPDX-License-Identifier: MIT
*
*/

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
    combos {
        compatible = "zmk,combos";
        combo_esc {
            timeout-ms = <50>;
            key-positions = <7 8>;
            bindings = <&kp ESC>;
        };
        combo_z {
            timeout-ms = <50>;
            key-positions = <1 2>;
            bindings = <&kp Z>;
        };
        combo_q {
            timeout-ms = <50>;
            key-positions = <4 5>;
            bindings = <&kp Q>;
        };
    };

    behaviors {
        mmlt: mm_lpar_comma {
            compatible = "zmk,behavior-mod-morph";
            label = "LPAR_COMMA";
            #binding-cells = <0>;
            bindings = <&kp LPAR>, <&kp COMMA>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            masked_mods = <(MOD_LSFT)>;
        };
        mmgt: mm_rpar_dot {
            compatible = "zmk,behavior-mod-morph";
            label = "LPAR_DOT";
            #binding-cells = <0>;
            bindings = <&kp RPAR>, <&kp DOT>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            masked_mods = <(MOD_LSFT)>;
        };
    };


    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "ALPHAS";
            bindings = <
   &none &kp V       &kp G      &kp H       &kp F       &kp K   &kp MINUS &kp U       &kp O       &kp Y      &kp W       &reset
   &none &mt LMETA R &mt LALT S &mt LCTRL N &mt LSHFT T &kp P   &kp J     &mt RSHFT A &mt RCTRL E &mt RALT I &mt RMETA C &none
   &none &kp X       &kp M      &kp L       &kp D       &kp B   &kp SLASH &mmlt       &mmgt       &kp DQT    &kp SQT     &none
                                &kp TAB  &lt 3 COMMA  &kp DOT   &lt 2 BSPC  &lt 1 SPACE  &kp RET
            >;
        };
        number_layer {
            label = "NUMBER";
            bindings = <
   &none &kp LBKT  &kp N7 &kp N8 &kp N9 &kp RBKT    &none &none     &none     &none    &none     &none
   &none &kp SEMI  &kp N4 &kp N5 &kp N6 &kp EQUAL   &none &kp RSHFT &kp RCTRL &kp RALT &kp RMETA &none
   &none &kp GRAVE &kp N1 &kp N2 &kp N3 &kp BSLH    &none &none     &none     &none    &none     &none
                       &kp DOT  &kp N0  &kp MINUS   &none  &trans  &none
            >;
        };

        symbol_layer {
            label = "SYMBOL";
            bindings = <
   &none &kp LBRC  &kp AMPS &kp STAR  &kp LPAR  &kp RBRC   &none &none     &none     &none    &none     &none
   &none &kp COLON &kp DLLR &kp PRCNT &kp CARET &kp PLUS   &none &kp RSHFT &kp RCTRL &kp RALT &kp RMETA &none
   &none &kp TILDE &kp EXCL &kp AT    &kp HASH  &kp PIPE   &none &none     &none     &none    &none     &none
                           &kp LPAR  &kp RPAR  &kp UNDER   &none  &trans  &none
            >;
        };

        navigation_layer {
            label = " NAVI ";
            bindings = <
   &none &none     &none    &none     &none     &none   &none    &bt BT_PRV &bt BT_NXT &none     &bt BT_CLR &none
   &none &kp LMETA &kp LALT &kp LCTRL &kp LSHFT &none   &kp LEFT &kp DOWN   &kp UP     &kp RIGHT &kp CAPS   &none
   &none &none     &none    &none     &none     &none   &kp HOME &kp PG_DN  &kp PG_UP  &kp END   &none      &none
                                 &none  &trans  &none   &none  &none  &none
            >;
        };
    };
};
